{
    "openapi": "3.0.0",
    "info": {
        "title": "L5 OpenApi",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "aziz16110904@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/signUp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "1a3d1649202703784deba7692d203ef0",
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "password"
                                ],
                                "properties": {
                                    "phone": {
                                        "description": "User's phone number",
                                        "type": "string",
                                        "example": "+998991903704"
                                    },
                                    "password": {
                                        "description": "User's password (min 6 characters)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "description": "Authentication token for the registered user",
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "description": "Validation errors",
                                            "properties": {
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login for existing user",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "password"
                                ],
                                "properties": {
                                    "phone": {
                                        "description": "User's phone number",
                                        "type": "string",
                                        "example": "+998991903704"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Login successful",
                                            "type": "string"
                                        },
                                        "token": {
                                            "description": "Authentication token for the user",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Authentication token is missing or invalid"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/branches": {
            "get": {
                "tags": [
                    "Branches"
                ],
                "summary": "Get all branches",
                "description": "Retrieve a list of all branches with associated images.",
                "operationId": "8bad73dccf3e88f9ee9007d8d3eb1040",
                "responses": {
                    "200": {
                        "description": "List of branches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": null
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Branch Name"
                                                    },
                                                    "brand": {
                                                        "type": "string",
                                                        "example": "Tech"
                                                    },
                                                    "region": {
                                                        "type": "string",
                                                        "example": "Tashkent"
                                                    },
                                                    "district": {
                                                        "type": "string",
                                                        "example": "Toshkent"
                                                    },
                                                    "images": {
                                                        "type": "array",
                                                        "items": {
                                                            "description": "URLs of associated images",
                                                            "type": "string",
                                                            "format": "url"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Branches"
                ],
                "summary": "Create a new branch with optional image uploads",
                "description": "Creates a new branch with specified details and optional images.",
                "operationId": "df88a7dda440ba67d2d3433731a1dbee",
                "requestBody": {
                    "description": "Branch data with optional image upload (multi-select)",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "brand_id",
                                    "region_id",
                                    "district_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Branch Name"
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": "1"
                                    },
                                    "region_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": "1"
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": "15"
                                    },
                                    "images[]": {
                                        "description": "Array of image files (JPEG, PNG, GIF) to upload",
                                        "type": "array",
                                        "items": {
                                            "description": "Image file (JPEG, PNG, GIF)",
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Branch created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Branch created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Branch Name"
                                                },
                                                "brand": {
                                                    "type": "string",
                                                    "example": "Tech"
                                                },
                                                "region": {
                                                    "type": "string",
                                                    "example": "Tashkent"
                                                },
                                                "district": {
                                                    "type": "string",
                                                    "example": "Toshkent"
                                                },
                                                "images": {
                                                    "type": "array",
                                                    "items": {
                                                        "description": "URLs of uploaded images",
                                                        "type": "urls",
                                                        "format": "url"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/branches/{id}": {
            "get": {
                "tags": [
                    "Branches"
                ],
                "summary": "Get a specific branch by ID",
                "description": "Retrieves details of a specific branch by its ID.",
                "operationId": "c9388b859d392f0ff3b7077e95d29776",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Branch ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Branch details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Branch Name"
                                                },
                                                "brand": {
                                                    "type": "string",
                                                    "example": "Tech"
                                                },
                                                "region": {
                                                    "type": "string",
                                                    "example": "Tashkent"
                                                },
                                                "district": {
                                                    "type": "string",
                                                    "example": "Toshkent"
                                                },
                                                "images": {
                                                    "type": "array",
                                                    "items": {
                                                        "description": "URLs of uploaded images",
                                                        "type": "string",
                                                        "format": "url"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Branches"
                ],
                "summary": "Update an existing branch",
                "description": "Updates an existing branch with specified details and optional image uploads.",
                "operationId": "a5963da4c48c3a3beddee63fc66801fe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Branch ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Branch data with optional image upload (multi-select)",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "brand_id",
                                    "region_id",
                                    "district_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "region_id": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "images[]": {
                                        "type": "array",
                                        "items": {
                                            "description": "Image file (JPEG, PNG, GIF)",
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Branch updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "brand_id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "region_id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "district_id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "images": {
                                                    "type": "array",
                                                    "items": {
                                                        "description": "URLs of updated images",
                                                        "type": "string",
                                                        "format": "url"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Branches"
                ],
                "summary": "Delete a branch by ID",
                "description": "Deletes a branch and its associated images by its ID.",
                "operationId": "b4945d42e09ef04578cb6e61d86f156d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Branch ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Branch deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Branch deleted successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get all brands",
                "operationId": "3c41aa2e65314941e37a634e810c5f73",
                "responses": {
                    "200": {
                        "description": "List of brands",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": null
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Tenomart"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "url"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T09:53:02.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T11:10:21.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Create a new brand",
                "operationId": "1dae5363a453b159e035bc04b3fbc0be",
                "requestBody": {
                    "description": "Brand data with optional image upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Brand name",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brand created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Example Brand"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "image_url": {
                                            "type": "string",
                                            "example": "http://example.com/image.jpg",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/brands/{id}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get a specific brand by ID",
                "operationId": "767f67c0955810b713c48d4100f02362",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": null
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Techno"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "url"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T09:53:02.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T11:10:21.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Update an existing brand by ID",
                "operationId": "566d8634b027100088c00d6d38c6c281",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Brand data with optional image upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Brand name",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Brand updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "New Brand Name"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "url"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/new_image.jpg",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete a brand by ID",
                "description": "Deletes a brand along with its associated images, if any.",
                "operationId": "401903a3c5a05c699953cb0b07a385e2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Brand deleted successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/regions": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Get all regions with districts",
                "description": "Retrieves a list of all regions along with their associated districts.",
                "operationId": "2ea4e3f793fcf34f100e4d8b03ede681",
                "responses": {
                    "200": {
                        "description": "List of regions with districts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": null
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Region Name"
                                                    },
                                                    "branches": {
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "districts": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "District Name"
                                                                },
                                                                "branches": {
                                                                    "type": "integer",
                                                                    "example": 10
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": null
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+9999999"
                                                },
                                                "last_login_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-16 23:18:59"
                                                },
                                                "is_blocked": {
                                                    "type": "boolean",
                                                    "example": 0
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T09:53:02.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T11:10:21.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "592819a0265360b2014512d6dbfaf0e7",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "password"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New user created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+9999999"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T09:53:02.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T11:10:21.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a specific user by ID",
                "operationId": "36a33ff774d5cba33c039dec2c3e0287",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": null
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+9999999"
                                                },
                                                "last_login_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-16 23:18:59"
                                                },
                                                "is_blocked": {
                                                    "type": "boolean",
                                                    "example": 0
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T09:53:02.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T11:10:21.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user by ID",
                "operationId": "b9091397c8b25f12c6adb74be6ce3a5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "password"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+9999999"
                                                },
                                                "last_login_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-16 23:18:59"
                                                },
                                                "is_blocked": {
                                                    "type": "boolean",
                                                    "example": 0
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T09:53:02.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-17T11:10:21.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user by ID",
                "operationId": "fa56cffde745d3f152f95cbacd936c0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    }
}